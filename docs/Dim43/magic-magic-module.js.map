{"version":3,"sources":["./src/app/magic/services/magic.service.ts","./src/app/magic/carta/carta.component.ts","./src/app/magic/carta/carta.component.html","./src/app/magic/magic.module.ts","./src/app/magic/set/set.component.ts","./src/app/magic/set/set.component.html","./src/app/magic/models/carta-imp.ts","./src/app/magic/magic/magic.component.ts","./src/app/magic/magic/magic.component.html","./src/app/magic/magic-routing.module.ts"],"names":[],"mappings":"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","file":"magic-magic-module.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Carta } from '../models/carta';\r\nimport { SetMagic } from '../models/set-magic';\r\nimport { SetMagicImp } from '../models/set-magic-imp';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MagicService {\r\n\r\n  urlEndPoint: string = environment.hostMagic;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getSets(): Observable<any> {\r\n    return this.http.get<SetMagic>(`${this.urlEndPoint}sets`);\r\n  }\r\n\r\n  getCartasSet(id: string): Observable<any> {\r\n    return this.http.get<SetMagic>(`${this.urlEndPoint}cards?set=${id}`);\r\n  }\r\n\r\n  mapearSets(setsApi: any): SetMagic[] {\r\n    let sets: SetMagic[] = [];\r\n    //let set: SetMagic = new SetMagicImp();\r\n    sets = setsApi.sets;\r\n/*     setsApi.sets.forEach(s => {\r\n      set.code = s.code;\r\n      set.name = s.name;\r\n      sets.push(set);\r\n    }); */\r\n    return sets;\r\n  }\r\n\r\n  mapearCartas(cartasApi: any): Carta[] {\r\n    let cartas: Carta[] = [];\r\n    cartas = cartasApi.cards;\r\n    return cartas;\r\n  }\r\n\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Carta } from '../models/carta';\r\n\r\n@Component({\r\n  selector: 'app-carta',\r\n  templateUrl: './carta.component.html',\r\n  styles: [\r\n    '.card { background-color: rgba(255,255,255,0.5); }',\r\n    'img { cursor: pointer; }',\r\n    '.imagenModal { border-radius: 15px }',\r\n    '.modal-dialog { max-width: 100%; width: auto !important; display: inline-block; }'\r\n\r\n    ]\r\n})\r\nexport class CartaComponent implements OnInit {\r\n\r\n  @Input() carta: Carta;\r\n  @Output() mostrarCarta = new EventEmitter<Carta>();\r\n  flavor: string\r\n  longitudMax: number = 50;\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if (this.carta.flavor !=null) {\r\n      if (this.carta.flavor.length > this.longitudMax) {\r\n        this.flavor = this.carta.flavor.substr(0, this.longitudMax)+\"...\";\r\n      } else {\r\n        this.flavor = this.carta.flavor\r\n      }\r\n    }\r\n  }\r\n\r\n  onSolicitarModal() {\r\n    return this.mostrarCarta.emit();\r\n  }\r\n\r\n  mandarCarta() {\r\n    return this.mostrarCarta.emit(this.carta);\r\n  }\r\n}\r\n","<div class=\"col-2\">\r\n  <div class=\"card align-items-center\" style=\"width: 12rem;\">\r\n      <img [src]=\" carta.imageUrl\" class=\"card-img-top\" [alt]=\"carta.name\" data-toggle=\"modal\" data-target=\"#cartaModal\" type=\"button\" id=\"imagenCarta\" (click)=\"mandarCarta()\">\r\n    <div class=\"card-body\">\r\n      <h5 class=\"card-title\">{{carta.name}}</h5>\r\n      <p class=\"card-text\">{{carta.colors}} {{carta.type}}\r\n        <br><small class=\"font-italic smaller\">{{flavor}}</small>\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MagicRoutingModule } from './magic-routing.module';\r\nimport { MagicComponent } from './magic/magic.component';\r\nimport { SetComponent } from './set/set.component';\r\nimport { CartaComponent } from './carta/carta.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [MagicComponent, SetComponent, CartaComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MagicRoutingModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class MagicModule { }\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Carta } from '../models/carta';\r\nimport { SetMagic } from '../models/set-magic';\r\nimport { MagicService } from '../services/magic.service';\r\n\r\n@Component({\r\n  selector: 'app-set',\r\n  templateUrl: './set.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class SetComponent implements OnInit {\r\n\r\n  @Input() set: SetMagic;\r\n  @Input() cartas: Carta[];\r\n  @Output() mostrarCarta = new EventEmitter<Carta>();\r\n\r\n  constructor(private magicService: MagicService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  solicitarModal(carta: Carta){\r\n    return this.mostrarCarta.emit(carta);\r\n  }\r\n}\r\n","<div class=\"d-inline-flex\" *ngFor=\"let c of cartas\">\r\n  <app-carta [carta]=\"c\" (mostrarCarta)=\"solicitarModal(c)\"></app-carta>\r\n</div>\r\n","import { Carta } from \"./carta\";\n\nexport class CartaImp implements Carta {\n  name: string;\n  id: string;\n  imageUrl: string;\n  text: string;\n  color?: string;\n  colors?: string[];\n  type: string;\n  flavor?: string;\n}\n","import {\r\n  Component,\r\n  OnInit,\r\n  //TemplateRef,\r\n  //ViewChild,\r\n  //ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Carta } from '../models/carta';\r\nimport { CartaImp } from '../models/carta-imp';\r\nimport { SetMagic } from '../models/set-magic';\r\nimport { MagicService } from '../services/magic.service';\r\n\r\n@Component({\r\n  selector: 'app-magic',\r\n  templateUrl: './magic.component.html',\r\n  styles: [\r\n    '#mtg { background-image: url(\"./assets/mtg.jpg\"); background-repeat: repeat-y; background-attachment: fixed; background-position: center; height: 88vh }',\r\n  ],\r\n})\r\nexport class MagicComponent implements OnInit {\r\n\r\n  backdrop: any;\r\n  sets: SetMagic[] = [];\r\n  codigoSet: string = null;\r\n  set: SetMagic;\r\n  cartas: Carta[];\r\n  carta: Carta = new CartaImp();\r\n\r\n  constructor(private magicService: MagicService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.magicService.getSets().subscribe((response) => {\r\n      this.sets = this.magicService.mapearSets(response);\r\n      console.log(this.sets);\r\n    });\r\n  }\r\n\r\n  cargarSet() {\r\n    this.set = null;\r\n    console.log('cargar ', this.codigoSet);\r\n    this.set = this.sets.filter((s) => s.code == this.codigoSet)[0];\r\n    this.magicService.getCartasSet(this.set.code).subscribe((response) => {\r\n      this.cartas = this.magicService.mapearCartas(response);\r\n      console.log(this.cartas);\r\n    });\r\n  }\r\n\r\n  mostrarCarta(carta: Carta) {\r\n    this.carta = carta;\r\n  }\r\n}\r\n","<div class=\"text-center\" id=\"mtg\">\r\n  <h2><img src=\"./assets/MagicLogo.png\" alt=\"Magic: the Gathering\"></h2>\r\n  <div class=\"font-weight-bold\">Tu aplicación de Magic: the Gathering definitiva.</div>\r\n  <hr>\r\n  <div>\r\n    <span class=\"font-weight-bold\">Elige una colección:</span>\r\n    <select name=\"sets\" [(ngModel)]=\"codigoSet\" (change)=\"cargarSet()\">\r\n      <option *ngFor=\"let s of sets\" [value]=\"s.code\">\r\n        <span>{{ s.name }}</span>\r\n      </option>\r\n    </select>\r\n  </div>\r\n\r\n  <div *ngIf=\"codigoSet!=null\">\r\n    <app-set [set]=\"set\" [cartas]=\"cartas\" (mostrarCarta)=\"mostrarCarta($event)\">\r\n    </app-set>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"cartaModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-dialog-centered\">\r\n    <div class=\"modal-content\" style=\"background-color: transparent;\">\r\n      <div class=\"modal-body text-center\">\r\n        <img [src]=\" carta.imageUrl\" [alt]=\"carta.name\" class=\"imagenModal\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MagicComponent } from './magic/magic.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MagicComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MagicRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}